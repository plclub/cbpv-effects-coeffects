Require Export full.CBN.translation.

Theorem translation_correct :
    forall n (γ : gradeVec n) (Γ : contextL n) e T,
    Wt γ Γ e T ->
    CWt γ (translateContext Γ)
        (translateTerm e) (translateType T) ϵ.
Proof with (autorewrite with coeffects trans effects);
    (eauto with coeffects trans renaming typing effects).
    intros n γ Γ e T H.
    induction H; cbn.
    - (*var*) econstructor...
    - (*abs*) econstructor...
        rewrite contextTranslationHom in IHWt...
    - (*app*) econstructor...
    - (*unit*) econstructor...
    - (*seq*) econstructor...
        apply T_Seq with (γ1 := Qone .: 0s)
            (γ2 := Qzero .: γ2)...
        + econstructor... solve_js0.
        + eapply type_pres_renaming...
        + auto...
    - (*inl*) econstructor...
    - (*inr*) econstructor...
    - (*with*) econstructor...
    - (*fst*) econstructor...
    - (*snd*) econstructor...
    - (*case*)
        eapply T_Let with
        (γ2 := γ2); subst... fold translateType.
        all: rewrite q_or_1_lt1...
        eapply T_Case with
        (γ1 := Qone .: 0s) (γ2 := Qzero .: γ2)
        (A1 := VThunk ϵ (translateType T1))
        (A2 := VThunk ϵ (translateType T2))...
        + econstructor... solve_js0.
        + eapply type_pres_renaming...
            rewrite contextTranslationHom. eapply up_ren_wb.
        + eapply type_pres_renaming...
            rewrite contextTranslationHom.
            eapply up_ren_wb...
    - (*box*) econstructor...
    - (*unbox*) eapply T_Let with (γ2 := γ2)...
        fold translateType.
        rewrite contextTranslationHom in IHWt2.
        auto.
    - (*sub*) econstructor...
    - (*return*) econstructor...
    - (*bind*) subst.
        apply T_Ret with (γ1 := q_or_1 q Q* γ1 Q+ γ2).
        all: eauto with coeffects.
        apply T_Thunk. (* apply T_SubEff. *)
        eapply T_Let with (q1 := Qone)
        (A := VThunk ϵ (translateType T1))
        (γ2 := γ2)
        (γ1 := γ1)
        (q' := q_or_1 q)...
        + eapply T_Let with (γ2 := 0s). econstructor... eauto. autorewrite with coeffects effects.
            eapply T_Force with (ϕ := ϕ1). cbn. econstructor... all: eauto... solve_js0.
        + cbn in IHWt2. rewrite contextTranslationHom in IHWt2.
            eapply T_Let with (q' := Qone) (γ1 := q_or_1 q .: γ2)
            (q1 := Qone)
            (A := VThunk ϕ2 (CF Qone (VThunk ϵ (translateType T2))))
            (ϕ1 := ϵ)...
            econstructor... econstructor... solve_js0.
    - (* coerce *) econstructor. econstructor. eapply T_SubEff.
        eapply T_Let with (γ2 := 0s) (ϕ2 := ϕ). all: eauto.
        + autorewrite with coeffects. econstructor. cbn. econstructor... solve_js0.
        + autorewrite with effects. eauto with effects.
        + autorewrite with coeffects. eauto.
    - (*tick*) econstructor...
        econstructor... subst. eapply T_Let with (γ2 := 0s)...
        econstructor... econstructor...
        econstructor... econstructor...
        solve_js0.
Qed.
